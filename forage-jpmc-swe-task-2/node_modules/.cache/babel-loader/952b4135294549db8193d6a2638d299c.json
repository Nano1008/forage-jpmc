{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\src\\\\App.tsx\";\nimport React, { Component } from \"react\";\nimport DataStreamer from \"./DataStreamer\";\nimport Graph from \"./Graph\";\nimport \"./App.css\";\nimport { setInterval } from \"timers\";\n/**\r\n * State declaration for <App />\r\n */\n\n/**\r\n * The parent element of the react app.\r\n * It renders title, button and Graph react element.\r\n */\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      // data saves the server responds.\n      // We use this state to parse data down to the child element (Graph) as element property\n      data: [],\n      showGraph: false\n    };\n    return _this;\n  }\n  /**\r\n   * Render Graph react component with state.data parse as property data\r\n   */\n\n\n  _createClass(App, [{\n    key: \"renderGraph\",\n    value: function renderGraph() {\n      if (this.state.showGraph) {\n        return /*#__PURE__*/React.createElement(Graph, {\n          data: this.state.data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n    /**\r\n     * Get new data from server and update the state with the new data\r\n     */\n\n  }, {\n    key: \"getDataFromServer\",\n    value: function getDataFromServer() {\n      var _this2 = this;\n\n      var x = 0;\n      var interval = setInterval(function () {\n        DataStreamer.getData(function (serverResponds) {\n          _this2.setState({\n            data: serverResponds,\n            showGraph: true\n          });\n        });\n        x++;\n\n        if (x > 1000) {\n          clearInterval(interval);\n        }\n      }, 100);\n    }\n    /**\r\n     * Render the App react component\r\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"Bank & Merge Co Task 2\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary Stream-button\" // when button is click, our react app tries to request\n        // new data from the server.\n        // As part of your task, update the getDataFromServer() function\n        // to keep requesting the data every 100ms until the app is closed\n        // or the server does not return anymore data.\n        ,\n        onClick: function onClick() {\n          _this3.getDataFromServer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Start Streaming Data\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Graph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, this.renderGraph())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","DataStreamer","Graph","setInterval","App","props","state","data","showGraph","x","interval","getData","serverResponds","setState","clearInterval","getDataFromServer","renderGraph"],"sources":["C:/Users/95841/Desktop/forage-jpmc-swe-task-2/src/App.tsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport DataStreamer, { ServerRespond } from \"./DataStreamer\";\r\nimport Graph from \"./Graph\";\r\nimport \"./App.css\";\r\nimport { setInterval } from \"timers\";\r\n\r\n/**\r\n * State declaration for <App />\r\n */\r\ninterface IState {\r\n  data: ServerRespond[];\r\n  showGraph: boolean;\r\n}\r\n\r\n/**\r\n * The parent element of the react app.\r\n * It renders title, button and Graph react element.\r\n */\r\nclass App extends Component<{}, IState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // data saves the server responds.\r\n      // We use this state to parse data down to the child element (Graph) as element property\r\n      data: [],\r\n      showGraph: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Render Graph react component with state.data parse as property data\r\n   */\r\n  renderGraph() {\r\n    if (this.state.showGraph) {\r\n      return <Graph data={this.state.data} />;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get new data from server and update the state with the new data\r\n   */\r\n  getDataFromServer() {\r\n    let x = 0;\r\n    const interval = setInterval(() => {\r\n      DataStreamer.getData((serverResponds: ServerRespond[]) => {\r\n        this.setState({\r\n          data: serverResponds,\r\n          showGraph: true,\r\n        });\r\n      });\r\n      x++;\r\n      if (x > 1000) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Render the App react component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">Bank & Merge Co Task 2</header>\r\n        <div className=\"App-content\">\r\n          <button\r\n            className=\"btn btn-primary Stream-button\"\r\n            // when button is click, our react app tries to request\r\n            // new data from the server.\r\n            // As part of your task, update the getDataFromServer() function\r\n            // to keep requesting the data every 100ms until the app is closed\r\n            // or the server does not return anymore data.\r\n            onClick={() => {\r\n              this.getDataFromServer();\r\n            }}\r\n          >\r\n            Start Streaming Data\r\n          </button>\r\n          <div className=\"Graph\">{this.renderGraph()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAA4C,gBAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA;IACMC,G;;;EACJ,aAAYC,KAAZ,EAAuB;IAAA;;IAAA;;IACrB,yEAAMA,KAAN;IAEA,MAAKC,KAAL,GAAa;MACX;MACA;MACAC,IAAI,EAAE,EAHK;MAIXC,SAAS,EAAE;IAJA,CAAb;IAHqB;EAStB;EAED;AACF;AACA;;;;;kCACgB;MACZ,IAAI,KAAKF,KAAL,CAAWE,SAAf,EAA0B;QACxB,oBAAO,oBAAC,KAAD;UAAO,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAAxB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAP;MACD;IACF;IAED;AACF;AACA;;;;wCACsB;MAAA;;MAClB,IAAIE,CAAC,GAAG,CAAR;MACA,IAAMC,QAAQ,GAAGP,WAAW,CAAC,YAAM;QACjCF,YAAY,CAACU,OAAb,CAAqB,UAACC,cAAD,EAAqC;UACxD,MAAI,CAACC,QAAL,CAAc;YACZN,IAAI,EAAEK,cADM;YAEZJ,SAAS,EAAE;UAFC,CAAd;QAID,CALD;QAMAC,CAAC;;QACD,IAAIA,CAAC,GAAG,IAAR,EAAc;UACZK,aAAa,CAACJ,QAAD,CAAb;QACD;MACF,CAX2B,EAWzB,GAXyB,CAA5B;IAYD;IAED;AACF;AACA;;;;6BACW;MAAA;;MACP,oBACE;QAAK,SAAS,EAAC,KAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAQ,SAAS,EAAC,YAAlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,4BADF,eAEE;QAAK,SAAS,EAAC,aAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QACE,SAAS,EAAC,+BADZ,CAEE;QACA;QACA;QACA;QACA;QANF;QAOE,OAAO,EAAE,mBAAM;UACb,MAAI,CAACK,iBAAL;QACD,CATH;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,0BADF,eAcE;QAAK,SAAS,EAAC,OAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAwB,KAAKC,WAAL,EAAxB,CAdF,CAFF,CADF;IAqBD;;;;EAjEehB,S;;AAoElB,eAAeI,GAAf"},"metadata":{},"sourceType":"module"}