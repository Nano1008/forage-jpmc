{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\95841\\\\Desktop\\\\forage-jpmc-swe-task-2\\\\src\\\\App.tsx\";\nimport React, { Component } from 'react';\nimport DataStreamer from './DataStreamer';\nimport Graph from './Graph';\nimport './App.css';\n/**\r\n * State declaration for <App />\r\n */\n\n/**\r\n * The parent element of the react app.\r\n * It renders title, button and Graph react element.\r\n */\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      // data saves the server responds.\n      // We use this state to parse data down to the child element (Graph) as element property\n      data: []\n    };\n    return _this;\n  }\n  /**\r\n   * Render Graph react component with state.data parse as property data\r\n   */\n\n\n  _createClass(App, [{\n    key: \"renderGraph\",\n    value: function renderGraph() {\n      return /*#__PURE__*/React.createElement(Graph, {\n        data: this.state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      });\n    }\n    /**\r\n     * Get new data from server and update the state with the new data\r\n     */\n\n  }, {\n    key: \"getDataFromServer\",\n    value: function getDataFromServer() {\n      var _this2 = this;\n\n      DataStreamer.getData(function (serverResponds) {\n        // Update the state by creating a new array of data that consists of\n        // Previous data in the state and the new data from server\n        _this2.setState({\n          data: [].concat(_toConsumableArray(_this2.state.data), _toConsumableArray(serverResponds))\n        });\n      });\n    }\n    /**\r\n     * Render the App react component\r\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, \"Bank & Merge Co Task 2\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary Stream-button\" // when button is click, our react app tries to request\n        // new data from the server.\n        // As part of your task, update the getDataFromServer() function\n        // to keep requesting the data every 100ms until the app is closed\n        // or the server does not return anymore data.\n        ,\n        onClick: function onClick() {\n          _this3.getDataFromServer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"Start Streaming Data\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Graph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, this.renderGraph())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","DataStreamer","Graph","App","props","state","data","getData","serverResponds","setState","getDataFromServer","renderGraph"],"sources":["C:/Users/95841/Desktop/forage-jpmc-swe-task-2/src/App.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport DataStreamer, { ServerRespond } from './DataStreamer';\r\nimport Graph from './Graph';\r\nimport './App.css';\r\n\r\n/**\r\n * State declaration for <App />\r\n */\r\ninterface IState {\r\n  data: ServerRespond[],\r\n}\r\n\r\n/**\r\n * The parent element of the react app.\r\n * It renders title, button and Graph react element.\r\n */\r\nclass App extends Component<{}, IState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // data saves the server responds.\r\n      // We use this state to parse data down to the child element (Graph) as element property\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Render Graph react component with state.data parse as property data\r\n   */\r\n  renderGraph() {\r\n    return (<Graph data={this.state.data}/>)\r\n  }\r\n\r\n  /**\r\n   * Get new data from server and update the state with the new data\r\n   */\r\n  getDataFromServer() {\r\n    DataStreamer.getData((serverResponds: ServerRespond[]) => {\r\n      // Update the state by creating a new array of data that consists of\r\n      // Previous data in the state and the new data from server\r\n      this.setState({ data: [...this.state.data, ...serverResponds] });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render the App react component\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          Bank & Merge Co Task 2\r\n        </header>\r\n        <div className=\"App-content\">\r\n          <button className=\"btn btn-primary Stream-button\"\r\n            // when button is click, our react app tries to request\r\n            // new data from the server.\r\n            // As part of your task, update the getDataFromServer() function\r\n            // to keep requesting the data every 100ms until the app is closed\r\n            // or the server does not return anymore data.\r\n            onClick={() => {this.getDataFromServer()}}>\r\n            Start Streaming Data\r\n          </button>\r\n          <div className=\"Graph\">\r\n            {this.renderGraph()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAA4C,gBAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AAEA;AACA;AACA;;AAKA;AACA;AACA;AACA;IACMC,G;;;EACJ,aAAYC,KAAZ,EAAuB;IAAA;;IAAA;;IACrB,yEAAMA,KAAN;IAEA,MAAKC,KAAL,GAAa;MACX;MACA;MACAC,IAAI,EAAE;IAHK,CAAb;IAHqB;EAQtB;EAED;AACF;AACA;;;;;kCACgB;MACZ,oBAAQ,oBAAC,KAAD;QAAO,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAxB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAR;IACD;IAED;AACF;AACA;;;;wCACsB;MAAA;;MAClBL,YAAY,CAACM,OAAb,CAAqB,UAACC,cAAD,EAAqC;QACxD;QACA;QACA,MAAI,CAACC,QAAL,CAAc;UAAEH,IAAI,+BAAM,MAAI,CAACD,KAAL,CAAWC,IAAjB,sBAA0BE,cAA1B;QAAN,CAAd;MACD,CAJD;IAKD;IAED;AACF;AACA;;;;6BACW;MAAA;;MACP,oBACE;QAAK,SAAS,EAAC,KAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAQ,SAAS,EAAC,YAAlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,4BADF,eAIE;QAAK,SAAS,EAAC,aAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAQ,SAAS,EAAC,+BAAlB,CACE;QACA;QACA;QACA;QACA;QALF;QAME,OAAO,EAAE,mBAAM;UAAC,MAAI,CAACE,iBAAL;QAAyB,CAN3C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,0BADF,eAUE;QAAK,SAAS,EAAC,OAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACG,KAAKC,WAAL,EADH,CAVF,CAJF,CADF;IAqBD;;;;EAtDeX,S;;AAyDlB,eAAeG,GAAf"},"metadata":{},"sourceType":"module"}